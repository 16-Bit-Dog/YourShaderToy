RendererStartUpLogic makes d3d11 device of d3d12 on 11 in dx12

make super D3D12 object which has d3d11 object and uses that  to write as is, and calls the main render function of d3d11 using its, but it also uses this to draw its own unique stuff


save which renderer was used last as well

Also
{
make pointer to each uav,srv,samp element number, and only have offset - this allows me to make a "toggle bind [to pipeline and stage] button"

}



in M3DR draw:

[
object: name

HasTex's (put a toggle for all 8)
    shows each 8 with texture info
    
SHOW button:
    double click allows breaking down M3DR into small renderer window DX11?

show width and height of tex and stats of deccer object somehow in model view -make it for all object types as well
test
]

make dll #define toggle loader



stream line the addition of d3d12 stuff

(draw all resources in a big node --> which all are in a smaller node same for pipeline ?)

TODO: add more noise parameters

TODO: test shader with noise

TODO:
- stream option to link mpeg-dash video of shader code live
- multi user program-ing on same shader <-- do after project file thing (add object copies to [proj dir which must be chosen before starting project - if proj format exists it runs that and loads, if not then does not load anything])

TODO: maybe adapt some stuff to node system?

add file saver PROJ file to save what you made

TODO: proof read for proper COM deletion so I stop leaking random mem- prob also make the non com thing a com and use .addressOf() instead of &

make all selectable text tabs green
^^ do always



--------

print out RTV size in FILE_MANAGER

add: check box and select,

^^ add "auto map block size to current RTV size" which just does math on the spot to auto set  

add "new DepthTexture" to file manager tab -- you have inside this tab 1 forced main depth, and you can make more--> maybe not?


make: Load TXT button

add matrix type constant

add VR mode 

add d3d12

view port in scene view always has acsess to w a s d cam, and thats what the cam is for - add debug selection and stuff
    - 

- add dynamic linking for shared class linkage for faster code 

add matrix constant


then code crawl or the TODOs I left in the code

add static model data:
- full screen tri
- full screen quad

